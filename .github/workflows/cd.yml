name: 'Deploy to Production'

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

jobs:
  build_and_push_image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Authenticate with Google Cloud
        id: google_auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker authentication for Google Container Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and push Docker image to Artifact Registry
        run: |
          IMAGE_NAME="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REGISTRY }}/challenge-image-prod:latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy_to_cloudrun:
    needs: build_and_push_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Authenticate with Google Cloud
        id: google_auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy the service to Cloud Run
        id: cloud_run_deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: 'challenge-service-prod'
          image: 'us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REGISTRY }}/challenge-image-prod:latest'

      - name: Output deployed URL
        run: |
            echo "Deployed URL: ${{ steps.cloud_run_deploy.outputs.url }}"
