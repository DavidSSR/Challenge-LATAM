name: 'Integración Continua'

on:
  push:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Obtener código
        uses: actions/checkout@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Construir imagen
        run: docker build -f ${GITHUB_WORKSPACE}/Dockerfile.tests -t test_image .

      - name: Ejecutar pruebas en la imagen
        id: run-tests
        run: |
          docker run --rm test_image

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Obtener código
        uses: actions/checkout@v3

      - name: Autenticación con Google
        id: auth
        uses: 'google-github-actions/auth@v1' 
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          
      - name: Instalar CLI de gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configurar credenciales de Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev
    
      - name: Construir y subir la imagen
        run: |
          docker build -f ${GITHUB_WORKSPACE}/Dockerfile -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REGISTRY }}/challenge-image-dev:latest .
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REGISTRY }}/challenge-image-dev:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Obtener código
        uses: actions/checkout@v3
        
      - name: Autenticación con Google
        id: auth
        uses: 'google-github-actions/auth@v1' 
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Instalar CLI de gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Desplegar a Cloud Run
        id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: 'challenge-service-dev'
          image: 'us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REGISTRY }}/challenge-image-dev:latest'

  test-deployed-image:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Obtener código
        uses: actions/checkout@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Construir imagen Docker para prueba
        run: |
          docker build -f ${GITHUB_WORKSPACE}/Dockerfile.stress -t test_image .
          docker run --rm test_image

  create-release-branch:
    needs: test-deployed-image
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Obtener código
        uses: actions/checkout@v3

      - name: Crear rama de release con nombre del tag
        run: |
          git checkout -b release/${{ github.sha }}
          git push --set-upstream origin release/${{ github.sha }}

  checkout-release-branch:
    needs: create-release-branch
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Obtener código
        uses: actions/checkout@v3
        with:
          ref: 'release/${{ github.sha }}'

      - name: Crear PR a la rama principal
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "release/${{ github.sha }}"
          destination_branch: "main"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Merge release/${{ github.sha }} to main"
          pr_body: "Merge release/${{ github.sha }} to main after successful CI pipeline"
          pr_label: "automerge"